---

- hosts: all
  become: true
  tasks:

  - name: update repository index on amz
    tags: always
    dnf:
      update_cache: yes
    when: ansible_distribution == "Amazon"

  - name: update repository index on Ubuntu
    tags: always
    apt:
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

#Web server
- hosts: web_server
  become: true
  tasks:

  - name: install on ubuntu
    tags: apache2,ubuntu
    apt:
      name: 
        - apache2
        - libapache2-mod-php
      state: latest
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

  - name: install on Amazon
    tags: httpd,amazon
    dnf:
      name:
        - httpd
        - php
      state: latest
      update_cache: yes
    when: ansible_distribution == "Amazon"

  - name: start service on Amazon
    tags: httpd,amazon,apache
    service:
      name: httpd
      state: started
      enabled: yes
    when: ansible_distribution == "Amazon"

  - name: copy the file 
    tags: httpd,apache2
    copy:
      src: html/index.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

#Db server
- hosts: db_server
  become: true
  tasks:
    # in this i have provide to control two different os server
  - name: installation on Db server - Ubuntu
    tags: mariadb_ubuntu
    apt:
      name:
        - mariadb-server
      state: latest
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

  - name: installation on Db server - Centos
    tags: mariadb_centos
    apt:
      name:
        - mariadb
      state: latest
      update_cache: yes
    when: ansible_distribution == "Centos"

#Workstation
- hosts: workstation_server
  become: true
  tasks:

  - name: install unzip
    apt:
      name: unzip

  - name: install terrafrom 
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.8.2/terraform_1.8.2_linux_386.zip
      dest: /usr/local/bin
      remote_src: yes
      owner: root
      group: root
      mode: 0755
